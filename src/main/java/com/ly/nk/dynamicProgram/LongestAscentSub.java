package com.ly.nk.dynamicProgram;

/**
 *  BM71 最长上升子序列(一)
 *
 *  描述：
 *  给定一个长度为 n 的数组 arr，求它的最长严格上升子序列的长度。
 *  所谓子序列，指一个数组删掉一些数（也可以不删）之后，形成的新数组。例如 [1,5,3,7,3] 数组，其子序列有：[1,3,3]、[7] 等。
 *  但 [1,6]、[1,3,5] 则不是它的子序列。
 *  我们定义一个序列是 严格上升 的，当且仅当该序列不存在两个下标 i 和 j 满足i<j 且arri≥arrj。
 *
 * 数据范围：0≤n≤1000
 * 要求：时间复杂度O(n的2次方)， 空间复杂度O(n)
 *
 *  [6,3,1,5,2,3,7]
 *  4
 *  该数组最长上升子序列为 [1,2,3,7] ，长度为4
 *
 */
public class LongestAscentSub {

    /**
     * 方法1：
     *
     * 知识点：
     *
     * 思路：
     *
     * 步骤：
     *
     * 时空复杂度：
     *
     * 给定数组的最长严格上升子序列的长度。
     * @param arr int整型一维数组 给定的数组
     * @return int整型
     */
    public int longestIncreaseSub (int[] arr) {
        // write code here
    }
}
